const enableNavigationPreload=async()=>{self.registration.navigationPreload&&await self.registration.navigationPreload.enable()},onActivate=a=>{a.waitUntil(enableNavigationPreload())},addResourcesToCache=async a=>{const e=await caches.open("v2");await e.addAll(a)},onInstall=a=>{a.waitUntil(addResourcesToCache(["./","./static/css/hst-min.css","./static/js/hst-min.js"]))},isCacheableUrl=a=>"/file"==a.pathname,putInCache=async(a,e)=>{const t=await caches.open("v1");await t.put(a,e)},cachedFetch=async({request:a,preloadResponsePromise:e,fallbackUrl:t})=>{const s=await caches.match(a);if(s)return s;const c=await e;if(c)return isCacheableUrl(URL(a.url))&&putInCache(a,c.clone()),c;try{const e=await fetch(a);return isCacheableUrl(URL(a.url))&&putInCache(a,e.clone()),e}catch(a){const e=await caches.match(t);return e||new Response("Network error happened",{status:408,headers:{"Content-Type":"text/plain"}})}},onFetch=a=>{a.respondWith(cachedFetch({request:a.request,preloadResponsePromise:a.preloadResponse,fallbackUrl:"./img/fallback.jpg"}))};self.addEventListener("activate",(a=>onActivate(a))),self.addEventListener("install",(a=>onInstall(a))),self.addEventListener("fetch",(a=>onFetch(a)));